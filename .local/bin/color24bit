#!/usr/bin/env sh
#
#   This file echoes a bunch of 24-bit color codes
#   to the terminal to demonstrate its functionality.
#   The foreground escape sequence is ^[38;2;<r>;<g>;<b>m
#   The background escape sequence is ^[48;2;<r>;<g>;<b>m
#   <r> <g> <b> range from 0 to 255 inclusive.
#   The escape sequence ^[0m returns output to default

setBackgroundColor() {
  printf "\033[48;2;%d;%d;%dm" "$1" "$2" "$3"
}

resetOutput() {
  printf "\033[0m\n"
}

rainbowColor() {
  h=$(($1 / 43))
  f=$(($1 - 43 * h))
  t=$((f * 255 / 43))
  q=$((255 - t))

  case $h in
  0) echo "255 $t 0" ;;
  1) echo "$q 255 0" ;;
  2) echo "0 255 $t" ;;
  3) echo "0 $q 255" ;;
  4) echo "$t 0 255" ;;
  5) echo "255 0 $q" ;;
  *) echo "0 0 0" ;; # Should not reach here
  esac
}

for i in $(seq 0 127); do
  setBackgroundColor "$i" 0 0
  printf " "
done
resetOutput

for i in $(seq 255 128); do
  setBackgroundColor "$i" 0 0
  printf " "
done
resetOutput

for i in $(seq 0 127); do
  setBackgroundColor 0 "$i" 0
  printf " "
done
resetOutput

for i in $(seq 255 128); do
  setBackgroundColor 0 "$i" 0
  printf " "
done
resetOutput

for i in $(seq 0 127); do
  setBackgroundColor 0 0 "$i"
  printf " "
done
resetOutput

for i in $(seq 255 128); do
  setBackgroundColor 0 0 "$i"
  printf " "
done
resetOutput

for i in $(seq 0 127); do
  # Intentionally allowing word splitting for the output
  setBackgroundColor $(rainbowColor "$i")
  printf " "
done
resetOutput

for i in $(seq 255 128); do
  # Intentionally allowing word splitting for the output
  setBackgroundColor $(rainbowColor "$i")
  printf " "
done
resetOutput
